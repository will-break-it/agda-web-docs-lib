name: 'Test GitHub Action'

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test-action:
    name: 'Test Agda Docs Action'
    runs-on: ubuntu-latest
    
    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üß™ Create test HTML files
        run: |
          mkdir -p test-html/
          cat > test-html/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head><title>Test Agda Module</title></head>
          <body>
            <h1>Test Module</h1>
            <pre class="Agda">
            <span class="Symbol">{-#</span> <span class="Keyword">OPTIONS</span> <span class="Pragma">--safe</span> <span class="Symbol">#-}</span>
            <span class="Keyword">module</span> <span class="Module">Test</span> <span class="Keyword">where</span>

            <span class="Keyword">data</span> <span class="Datatype">‚Ñï</span> <span class="Symbol">:</span> <span class="PrimitiveType">Set</span> <span class="Keyword">where</span>
              <span class="InductiveConstructor">zero</span> <span class="Symbol">:</span> <span class="Datatype">‚Ñï</span>
              <span class="InductiveConstructor">suc</span>  <span class="Symbol">:</span> <span class="Datatype">‚Ñï</span> <span class="Symbol">‚Üí</span> <span class="Datatype">‚Ñï</span>
            </pre>
          </body>
          </html>
          EOF

          # Create additional test file for module structure
          cat > test-html/Test.Base.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head><title>Test.Base Module</title></head>
          <body>
            <h1>Test.Base Module</h1>
            <pre class="Agda">
            <span class="Keyword">module</span> <span class="Module">Test.Base</span> <span class="Keyword">where</span>
            
            <span class="Keyword">data</span> <span class="Datatype">Bool</span> <span class="Symbol">:</span> <span class="PrimitiveType">Set</span> <span class="Keyword">where</span>
              <span class="InductiveConstructor">true</span> <span class="InductiveConstructor">false</span> <span class="Symbol">:</span> <span class="Datatype">Bool</span>
            </pre>
          </body>
          </html>
          EOF

      - name: üß™ Create test config
        run: |
          cat > test-agda-docs.config.json << 'EOF'
          {
            "backButtonUrl": "/",
            "inputDir": "test-html/",
            "modules": ["Test"],
            "githubUrl": "https://github.com/will-break-it/agda-web-docs-lib"
          }
          EOF

      - name: üîÑ Test the action
        id: test
        uses: ./
        with:
          input-dir: 'test-html/'
          config-file: 'test-agda-docs.config.json'
          github-url: 'https://github.com/will-break-it/agda-web-docs-lib'
          modules: 'Test'

      - name: ‚úÖ Validate CSS integration
        run: |
          echo "üé® Testing CSS integration..."
          
          # Fail fast if the action didn't run successfully
          if [ "${{ steps.test.outcome }}" != "success" ]; then
            echo "‚ùå Main action failed, skipping validation"
            exit 1
          fi
          
          # Check that CSS files are properly linked
          if ! grep -q 'href="base.css"' test-html/index.html; then
            echo "‚ùå base.css not linked"
            exit 1
          fi
          
          if ! grep -q 'href="search.css"' test-html/index.html; then
            echo "‚ùå search.css not linked"
            exit 1
          fi
          
          if ! grep -q 'href="typePreview.css"' test-html/index.html; then
            echo "‚ùå typePreview.css not linked"
            exit 1
          fi
          
          # Check that CSS files actually exist
          if [ ! -f "test-html/base.css" ]; then
            echo "‚ùå base.css file not found"
            exit 1
          fi
          
          if [ ! -f "test-html/search.css" ]; then
            echo "‚ùå search.css file not found"
            exit 1
          fi
          
          if [ ! -f "test-html/typePreview.css" ]; then
            echo "‚ùå typePreview.css file not found"
            exit 1
          fi
          
          # Verify CSS content contains expected rules
          if ! grep -q ":root {" test-html/base.css; then
            echo "‚ùå CSS variables not found in base.css"
            exit 1
          fi
          
          if ! grep -q ".main-wrapper" test-html/base.css; then
            echo "‚ùå Main wrapper styles not found"
            exit 1
          fi
          
          if ! grep -q ".sidebar" test-html/base.css; then
            echo "‚ùå Sidebar styles not found"
            exit 1
          fi
          
          if ! grep -q ".theme-toggle" test-html/base.css; then
            echo "‚ùå Theme toggle styles not found"
            exit 1
          fi
          
          echo "‚úÖ CSS integration verified"

      - name: ‚úÖ Validate JavaScript integration
        run: |
          echo "‚ö° Testing JavaScript integration..."
          
          # Fail fast if the action didn't run successfully
          if [ "${{ steps.test.outcome }}" != "success" ]; then
            echo "‚ùå Main action failed, skipping validation"
            exit 1
          fi
          
          # Check that all required JS files are linked
          if ! grep -q 'src="themeInit.js"' test-html/index.html; then
            echo "‚ùå themeInit.js not linked"
            exit 1
          fi
          
          if ! grep -q 'src="codeBlocks.js"' test-html/index.html; then
            echo "‚ùå codeBlocks.js not linked"
            exit 1
          fi
          
          if ! grep -q 'src="themeToggle.js"' test-html/index.html; then
            echo "‚ùå themeToggle.js not linked"
            exit 1
          fi
          
          if ! grep -q 'src="sidebarToggle.js"' test-html/index.html; then
            echo "‚ùå sidebarToggle.js not linked"
            exit 1
          fi
          
          if ! grep -q 'src="search.js"' test-html/index.html; then
            echo "‚ùå search.js not linked"
            exit 1
          fi
          
          if ! grep -q 'src="typePreview.js"' test-html/index.html; then
            echo "‚ùå typePreview.js not linked"
            exit 1
          fi
          
          # Check that JS files actually exist
          for script in themeInit.js codeBlocks.js themeToggle.js sidebarToggle.js search.js typePreview.js; do
            if [ ! -f "test-html/$script" ]; then
              echo "‚ùå $script file not found"
              exit 1
            fi
          done
          
          # Verify JS content contains expected functions
          if ! grep -q "copyCode" test-html/codeBlocks.js; then
            echo "‚ùå copyCode function not found in codeBlocks.js"
            exit 1
          fi
          
          if ! grep -q "toggleSidebar" test-html/sidebarToggle.js; then
            echo "‚ùå toggleSidebar function not found"
            exit 1
          fi
          
          echo "‚úÖ JavaScript integration verified"

      - name: ‚úÖ Validate DOM structure
        run: |
          echo "üèóÔ∏è Testing DOM structure..."
          
          # Fail fast if the action didn't run successfully
          if [ "${{ steps.test.outcome }}" != "success" ]; then
            echo "‚ùå Main action failed, skipping validation"
            exit 1
          fi
          
          # Check for header structure
          if ! grep -q '<header>' test-html/index.html; then
            echo "‚ùå Header element not found"
            exit 1
          fi
          
          if ! grep -q 'class="header-left"' test-html/index.html; then
            echo "‚ùå Header left section not found"
            exit 1
          fi
          
          if ! grep -q 'class="header-right"' test-html/index.html; then
            echo "‚ùå Header right section not found"
            exit 1
          fi
          
          # Check for main layout structure
          if ! grep -q 'class="main-wrapper"' test-html/index.html; then
            echo "‚ùå Main wrapper not found"
            exit 1
          fi
          
          if ! grep -q 'class="sidebar"' test-html/index.html; then
            echo "‚ùå Sidebar not found"
            exit 1
          fi
          
          if ! grep -q 'class="main-content"' test-html/index.html; then
            echo "‚ùå Main content wrapper not found"
            exit 1
          fi
          
          # Check for sidebar content
          if ! grep -q 'class="modules-header"' test-html/index.html; then
            echo "‚ùå Modules header not found"
            exit 1
          fi
          
          if ! grep -q 'class="module-list"' test-html/index.html; then
            echo "‚ùå Module list not found"
            exit 1
          fi
          
          if ! grep -q 'class="module-link"' test-html/index.html; then
            echo "‚ùå Module links not found"
            exit 1
          fi
          
          # Check for theme toggle button
          if ! grep -q 'class="theme-toggle"' test-html/index.html; then
            echo "‚ùå Theme toggle button not found"
            exit 1
          fi
          
          # Check for back button (since we configured one)
          if ! grep -q 'class="back-button"' test-html/index.html; then
            echo "‚ùå Back button not found"
            exit 1
          fi
          
          # Check for GitHub link (since we configured one)
          if ! grep -q 'class="github-link"' test-html/index.html; then
            echo "‚ùå GitHub link not found"
            exit 1
          fi
          
          # Check for mobile menu toggle
          if ! grep -q 'class="menu-toggle"' test-html/index.html; then
            echo "‚ùå Menu toggle button not found"
            exit 1
          fi
          
          echo "‚úÖ DOM structure verified"

      - name: ‚úÖ Validate code block enhancement
        run: |
          echo "üìù Testing code block enhancements..."
          
          # Fail fast if the action didn't run successfully
          if [ "${{ steps.test.outcome }}" != "success" ]; then
            echo "‚ùå Main action failed, skipping validation"
            exit 1
          fi
          
          # Check for code container structure
          if ! grep -q 'class="code-container"' test-html/index.html; then
            echo "‚ùå Code container not found"
            exit 1
          fi
          
          if ! grep -q 'class="line-numbers"' test-html/index.html; then
            echo "‚ùå Line numbers not found"
            exit 1
          fi
          
          if ! grep -q 'class="code-content"' test-html/index.html; then
            echo "‚ùå Code content wrapper not found"
            exit 1
          fi
          
          if ! grep -q 'class="code-line"' test-html/index.html; then
            echo "‚ùå Code lines not found"
            exit 1
          fi
          
          if ! grep -q 'class="line-number"' test-html/index.html; then
            echo "‚ùå Line number elements not found"
            exit 1
          fi
          
          # Check for copy button
          if ! grep -q 'class="copy-code-button"' test-html/index.html; then
            echo "‚ùå Copy code button not found"
            exit 1
          fi
          
          # Check for has-copy-button class on pre
          if ! grep -q 'class="Agda has-copy-button"' test-html/index.html; then
            echo "‚ùå has-copy-button class not added to pre element"
            exit 1
          fi
          
          # Check that line numbers have proper data attributes
          if ! grep -q 'data-line-number=' test-html/index.html; then
            echo "‚ùå Line number data attributes not found"
            exit 1
          fi
          
          if ! grep -q 'data-block-id=' test-html/index.html; then
            echo "‚ùå Block ID data attributes not found"
            exit 1
          fi
          
          echo "‚úÖ Code block enhancements verified"

      - name: ‚úÖ Validate responsive meta tags
        run: |
          echo "üì± Testing responsive design elements..."
          
          # Fail fast if the action didn't run successfully
          if [ "${{ steps.test.outcome }}" != "success" ]; then
            echo "‚ùå Main action failed, skipping validation"
            exit 1
          fi
          
          # Check for viewport meta tag
          if ! grep -q 'name="viewport"' test-html/index.html; then
            echo "‚ùå Viewport meta tag not found"
            exit 1
          fi
          
          if ! grep -q 'charset=' test-html/index.html; then
            echo "‚ùå Charset meta tag not found"
            exit 1
          fi
          
          echo "‚úÖ Responsive design elements verified"

      - name: ‚úÖ Validate accessibility features
        run: |
          echo "‚ôø Testing accessibility features..."
          
          # Fail fast if the action didn't run successfully
          if [ "${{ steps.test.outcome }}" != "success" ]; then
            echo "‚ùå Main action failed, skipping validation"
            exit 1
          fi
          
          # Check for aria-label attributes
          if ! grep -q 'aria-label=' test-html/index.html; then
            echo "‚ùå ARIA labels not found"
            exit 1
          fi
          
          # Check for title attributes on buttons
          if ! grep -q 'title=' test-html/index.html; then
            echo "‚ùå Title attributes not found"
            exit 1
          fi
          
          echo "‚úÖ Accessibility features verified"

      - name: ‚úÖ Validate search functionality setup
        run: |
          echo "üîç Testing search functionality setup..."
          
          # Fail fast if the action didn't run successfully
          if [ "${{ steps.test.outcome }}" != "success" ]; then
            echo "‚ùå Main action failed, skipping validation"
            exit 1
          fi
          
          # Check for type preview container
          if ! grep -q 'id="type-preview-container"' test-html/index.html; then
            echo "‚ùå Type preview container not found"
            exit 1
          fi
          
          echo "‚úÖ Search functionality setup verified"

      - name: ‚úÖ Validate module structure
        run: |
          echo "üìÇ Testing module structure..."
          
          # Fail fast if the action didn't run successfully
          if [ "${{ steps.test.outcome }}" != "success" ]; then
            echo "‚ùå Main action failed, skipping validation"
            exit 1
          fi
          
          # Both test files should have been processed
          if [ ! -f "test-html/Test.Base.html" ]; then
            echo "‚ùå Test.Base.html not found"
            exit 1
          fi
          
          # Check that both files contain the enhanced structure
          for file in index.html Test.Base.html; do
            if ! grep -q 'class="sidebar"' "test-html/$file"; then
              echo "‚ùå Sidebar not found in $file"
              exit 1
            fi
            
            if ! grep -q 'class="main-wrapper"' "test-html/$file"; then
              echo "‚ùå Main wrapper not found in $file"
              exit 1
            fi
          done
          
          # Check that the sidebar contains both modules
          if ! grep -q 'Test' test-html/index.html; then
            echo "‚ùå Test module not found in sidebar"
            exit 1
          fi
          
          echo "‚úÖ Module structure verified"

      - name: ‚úÖ Final validation
        run: |
          # Fail fast if the action didn't run successfully
          if [ "${{ steps.test.outcome }}" != "success" ]; then
            echo "‚ùå Main action failed, cannot perform final validation"
            exit 1
          fi
          
          echo "Files processed: ${{ steps.test.outputs.files-processed }}"
          echo "Output directory: ${{ steps.test.outputs.output-directory }}"
          
          # Verify that files were processed
          if [ "${{ steps.test.outputs.files-processed }}" -eq "0" ]; then
            echo "‚ùå No files were processed"
            exit 1
          fi
          
          # Expected to process 2 HTML files
          if [ "${{ steps.test.outputs.files-processed }}" -ne "2" ]; then
            echo "‚ùå Expected 2 files to be processed, got ${{ steps.test.outputs.files-processed }}"
            exit 1
          fi
          
          echo "üéâ All comprehensive tests passed!"
          echo ""
          echo "‚úÖ CSS styles properly integrated"
          echo "‚úÖ JavaScript functionality properly integrated" 
          echo "‚úÖ DOM structure correctly transformed"
          echo "‚úÖ Code blocks enhanced with line numbers and copy functionality"
          echo "‚úÖ Responsive design elements added"
          echo "‚úÖ Accessibility features implemented"
          echo "‚úÖ Search and type preview functionality set up"
          echo "‚úÖ Module structure properly created"

      - name: üì§ Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-html/
          retention-days: 1

      - name: üìã Display file samples for debugging
        if: always()
        run: |
          echo "=== INDEX.HTML SAMPLE ==="
          head -50 test-html/index.html
          echo ""
          echo "=== LINKED CSS FILES ==="
          ls -la test-html/*.css 2>/dev/null || echo "No CSS files found"
          echo ""
          echo "=== LINKED JS FILES ==="
          ls -la test-html/*.js 2>/dev/null || echo "No JS files found" 